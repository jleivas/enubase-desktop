/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cl.softdirex.enubase.view.os.general.panels;

import cl.softdirex.enubase.dao.Dao;
import cl.softdirex.enubase.entities.Cliente;
import cl.softdirex.enubase.entities.Detalle;
import cl.softdirex.enubase.entities.HistorialPago;
import cl.softdirex.enubase.entities.Inventario;
import cl.softdirex.enubase.entities.Item;
import cl.softdirex.enubase.entities.TipoPago;
import cl.softdirex.enubase.entities.Venta;
import cl.softdirex.enubase.utils.Boton;
import cl.softdirex.enubase.utils.CursorUtils;
import cl.softdirex.enubase.utils.GV;
import cl.softdirex.enubase.utils.GlobalValuesVariables;
import cl.softdirex.enubase.utils.Icons;
import cl.softdirex.enubase.utils.StEntities;
import cl.softdirex.enubase.view.notifications.OptionPane;
import cl.softdirex.enubase.view.principal.ContentAdmin;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author home
 */
public class VVenta extends javax.swing.JPanel {
    TableRowSorter trs;
    private Dao load = new Dao();
    private static List<Object> detalleVenta;
    private static Inventario stInventario = null;
    private static Venta VENTA = StEntities.getOpenVenta();
    private static List<Object> listItems = new ArrayList<>();
    private static List<Object> listTipoPagos = new ArrayList<>();
    
    DefaultTableModel modelo = new DefaultTableModel() {
           @Override
           public boolean isCellEditable(int fila, int columna) {
               return false; //Con esto conseguimos que la tabla no se pueda editar
           }
    };
   
    Boton boton = new Boton();
    /**
     * Creates new form VNuevaVenta
     */
    public VVenta() {
        if(!ContentAdmin.lblTitle.getText().toLowerCase().contains("venta")){
            ContentAdmin.lblTitle.setText("Folio de venta: "+VENTA.getCod()+" efectuada el día "+GV.dateToString(VENTA.getFecha(), "dd.MM.YYYY"));
        }
        initComponents();
        modelo.addColumn("Codigo");
        modelo.addColumn("Descripción");
        modelo.addColumn("Cantidad");
        modelo.addColumn("Precio unitario");
        modelo.addColumn("Total");
        tblListar.setModel(modelo);
        loadStaticObjects();
        cargarCbos();
        CursorUtils.cursorDF();
        CursorUtils.cursorDF(this);
        load();
        GlobalValuesVariables.setInventaryChooser(stInventario.getId());
        listItems = load.listar("st", new Item());
        GlobalValuesVariables.setInventaryChooser(0);
        updatePrice();
        lblDescuento.setVisible(false);
        txtDescuento.setVisible(false);
        lblInventario.setText(stInventario.getNombre());
        loadData();
    }
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        iconCalendar = new javax.swing.JLabel();
        iconPlace = new javax.swing.JLabel();
        txtFecha = new javax.swing.JLabel();
        iconClock = new javax.swing.JLabel();
        txtHora = new javax.swing.JLabel();
        txtLugar = new javax.swing.JLabel();
        txtEstado = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        txtRutCliente = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtNombreCliente = new javax.swing.JTextField();
        txtTelefonoCliente2 = new javax.swing.JTextField();
        txtMailCliente = new javax.swing.JTextField();
        txtDireccionCliente = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtComuna = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        txtCiudad = new javax.swing.JTextField();
        cboSexo = new javax.swing.JComboBox<>();
        jLabel14 = new javax.swing.JLabel();
        txtTelefonoCliente1 = new javax.swing.JTextField();
        iconDni = new javax.swing.JLabel();
        iconGender = new javax.swing.JLabel();
        iconMail = new javax.swing.JLabel();
        iconAddress = new javax.swing.JLabel();
        iconPhone2 = new javax.swing.JLabel();
        iconPhone1 = new javax.swing.JLabel();
        txtNacimiento = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtObs = new javax.swing.JTextArea();
        jPanel7 = new javax.swing.JPanel();
        jLabel24 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        txtAbono = new javax.swing.JSpinner();
        cboTipoPago = new javax.swing.JComboBox<>();
        jLabel27 = new javax.swing.JLabel();
        lblDescuento = new javax.swing.JLabel();
        txtSaldo = new javax.swing.JTextField();
        txtDescuento = new javax.swing.JTextField();
        txtTotal = new javax.swing.JTextField();
        btnAbonar = new javax.swing.JLabel();
        lblMessageStatus = new javax.swing.JLabel();
        btnImprimir = new javax.swing.JLabel();
        lblInventario = new javax.swing.JLabel();
        btnHistorial = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblListar = new javax.swing.JTable();
        jLabel19 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 255, 255));
        setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Entrega", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        iconCalendar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Calendar_25px.png"))); // NOI18N
        iconCalendar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconCalendarMouseClicked(evt);
            }
        });
        jPanel1.add(iconCalendar, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 30, -1, 20));

        iconPlace.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Geo-fence_25px.png"))); // NOI18N
        iconPlace.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconPlaceMouseClicked(evt);
            }
        });
        jPanel1.add(iconPlace, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 80, -1, 30));

        txtFecha.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        txtFecha.setText("Fecha");
        jPanel1.add(txtFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 320, 20));

        iconClock.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Clock_25px.png"))); // NOI18N
        iconClock.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconClockMouseClicked(evt);
            }
        });
        jPanel1.add(iconClock, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 50, -1, 40));

        txtHora.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        txtHora.setText("Hora");
        jPanel1.add(txtHora, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 60, 320, 20));

        txtLugar.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        txtLugar.setText("Lugar");
        jPanel1.add(txtLugar, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 90, 320, 20));

        txtEstado.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        txtEstado.setText("Estado");
        jPanel1.add(txtEstado, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 120, 340, 20));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Datos de Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N

        txtRutCliente.setEditable(false);
        txtRutCliente.setToolTipText("Rut o Identificador Personal");
        txtRutCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRutClienteFocusLost(evt);
            }
        });
        txtRutCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRutClienteActionPerformed(evt);
            }
        });
        txtRutCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRutClienteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtRutClienteKeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel7.setText("Nombre");

        txtNombreCliente.setEditable(false);
        txtNombreCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreClienteFocusLost(evt);
            }
        });
        txtNombreCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNombreClienteKeyTyped(evt);
            }
        });

        txtTelefonoCliente2.setEditable(false);
        txtTelefonoCliente2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefonoCliente2FocusLost(evt);
            }
        });
        txtTelefonoCliente2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoCliente2KeyTyped(evt);
            }
        });

        txtMailCliente.setEditable(false);
        txtMailCliente.setToolTipText("Email del cliente");
        txtMailCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMailClienteFocusLost(evt);
            }
        });
        txtMailCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMailClienteActionPerformed(evt);
            }
        });
        txtMailCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMailClienteKeyTyped(evt);
            }
        });

        txtDireccionCliente.setEditable(false);
        txtDireccionCliente.setToolTipText("Dirección del cliente");
        txtDireccionCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDireccionClienteFocusLost(evt);
            }
        });
        txtDireccionCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDireccionClienteKeyTyped(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel11.setText("Comuna");

        txtComuna.setEditable(false);
        txtComuna.setToolTipText("Comuna del cliente");
        txtComuna.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtComunaFocusLost(evt);
            }
        });
        txtComuna.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtComunaKeyTyped(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel12.setText("Ciudad");

        txtCiudad.setEditable(false);
        txtCiudad.setToolTipText("Ciudad del cliente");
        txtCiudad.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCiudadFocusLost(evt);
            }
        });
        txtCiudad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCiudadKeyTyped(evt);
            }
        });

        cboSexo.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboSexo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboSexo.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboSexoItemStateChanged(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel14.setText("Nac.");

        txtTelefonoCliente1.setEditable(false);
        txtTelefonoCliente1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTelefonoCliente1FocusLost(evt);
            }
        });
        txtTelefonoCliente1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtTelefonoCliente1KeyTyped(evt);
            }
        });

        iconDni.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Contact_Details_25px.png"))); // NOI18N
        iconDni.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconDniMouseClicked(evt);
            }
        });

        iconGender.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Gender_25px.png"))); // NOI18N
        iconGender.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconGenderMouseClicked(evt);
            }
        });

        iconMail.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_New_Post_25px.png"))); // NOI18N
        iconMail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconMailMouseClicked(evt);
            }
        });

        iconAddress.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Geo-fence_25px.png"))); // NOI18N
        iconAddress.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconAddressMouseClicked(evt);
            }
        });

        iconPhone2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Cell_Phone_25px.png"))); // NOI18N
        iconPhone2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconPhone2MouseClicked(evt);
            }
        });

        iconPhone1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Cell_Phone_25px.png"))); // NOI18N
        iconPhone1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iconPhone1MouseClicked(evt);
            }
        });

        txtNacimiento.setText("DD/MM/YYYY");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(iconAddress)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDireccionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 301, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtComuna, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(4, 4, 4)
                        .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(iconMail)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(iconGender)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cboSexo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(iconDni)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRutCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombreCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 566, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(102, 102, 102)
                        .addComponent(iconPhone1)
                        .addGap(1, 1, 1)
                        .addComponent(txtTelefonoCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(iconPhone2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelefonoCliente2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNacimiento)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtRutCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel7)
                        .addComponent(txtNombreCliente))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTelefonoCliente2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iconDni, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconMail)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel12)
                        .addComponent(txtComuna, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)
                        .addComponent(txtCiudad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDireccionCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtMailCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(cboSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(txtNacimiento)))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconPhone1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTelefonoCliente1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconPhone2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(iconAddress))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(iconGender)))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Observaciones", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N

        txtObs.setEditable(false);
        txtObs.setColumns(20);
        txtObs.setRows(5);
        jScrollPane1.setViewportView(txtObs);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 111, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Resumen", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N
        jPanel7.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel24.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        jLabel24.setText("Valor total");
        jPanel7.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 30, -1, -1));

        jLabel25.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        jLabel25.setText("Abono");
        jPanel7.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 60, -1, -1));

        txtAbono.setModel(new javax.swing.SpinnerNumberModel(0, 0, 9999999, 1));
        txtAbono.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtAbonoStateChanged(evt);
            }
        });
        txtAbono.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtAbonoPropertyChange(evt);
            }
        });
        jPanel7.add(txtAbono, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 60, 134, -1));

        cboTipoPago.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboTipoPago.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboTipoPago.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboTipoPagoItemStateChanged(evt);
            }
        });
        jPanel7.add(cboTipoPago, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 60, 110, -1));

        jLabel27.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        jLabel27.setText("Saldo Pendiente");
        jPanel7.add(jLabel27, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 90, -1, -1));

        lblDescuento.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        lblDescuento.setText("Dscto");
        jPanel7.add(lblDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(350, 30, -1, -1));

        txtSaldo.setEditable(false);
        txtSaldo.setFocusable(false);
        txtSaldo.setRequestFocusEnabled(false);
        txtSaldo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSaldoActionPerformed(evt);
            }
        });
        txtSaldo.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtSaldoPropertyChange(evt);
            }
        });
        jPanel7.add(txtSaldo, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 90, 118, -1));

        txtDescuento.setEditable(false);
        txtDescuento.setFocusable(false);
        txtDescuento.setRequestFocusEnabled(false);
        txtDescuento.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtDescuentoPropertyChange(evt);
            }
        });
        jPanel7.add(txtDescuento, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 30, 80, -1));

        txtTotal.setEditable(false);
        txtTotal.setFocusable(false);
        txtTotal.setRequestFocusEnabled(false);
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });
        txtTotal.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtTotalPropertyChange(evt);
            }
        });
        jPanel7.add(txtTotal, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 30, 117, -1));

        btnAbonar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Paper_Money_50px.png"))); // NOI18N
        btnAbonar.setToolTipText("Abonar");
        btnAbonar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAbonarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAbonarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAbonarMouseExited(evt);
            }
        });
        jPanel7.add(btnAbonar, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 90, -1, -1));

        lblMessageStatus.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        lblMessageStatus.setText("jLabel1");

        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Print_50px.png"))); // NOI18N
        btnImprimir.setToolTipText("Imprimir");
        btnImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnImprimirMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnImprimirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnImprimirMouseExited(evt);
            }
        });

        lblInventario.setFont(new java.awt.Font("Segoe UI Light", 1, 12)); // NOI18N
        lblInventario.setText("Inventario");

        btnHistorial.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Stack_of_Money_50px.png"))); // NOI18N
        btnHistorial.setToolTipText("Historial de pagos");
        btnHistorial.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHistorialMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnHistorialMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnHistorialMouseExited(evt);
            }
        });

        jPanel8.setBackground(new java.awt.Color(255, 255, 255));
        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Productos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 1, 14))); // NOI18N

        tblListar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Descripcion", "Cantidad", "SubTotal"
            }
        ));
        jScrollPane3.setViewportView(tblListar);

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Search_Property_25px_1.png"))); // NOI18N

        txtBuscar.setToolTipText("Buscar");
        txtBuscar.setBorder(null);
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblMessageStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 824, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnImprimir)
                        .addGap(18, 18, 18)
                        .addComponent(btnHistorial)
                        .addGap(94, 94, 94))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 373, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(84, 84, 84))
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 306, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(lblInventario, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblMessageStatus)
                        .addGap(34, 34, 34))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnImprimir)
                            .addComponent(btnHistorial))
                        .addContainerGap(15, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtTotalPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtTotalPropertyChange
        txtTotal.setHorizontalAlignment(4);
    }//GEN-LAST:event_txtTotalPropertyChange

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void txtDescuentoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtDescuentoPropertyChange
        txtDescuento.setHorizontalAlignment(4);
    }//GEN-LAST:event_txtDescuentoPropertyChange

    private void txtSaldoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtSaldoPropertyChange
        txtSaldo.setHorizontalAlignment(4);
    }//GEN-LAST:event_txtSaldoPropertyChange

    private void txtSaldoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSaldoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSaldoActionPerformed

    private void cboTipoPagoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboTipoPagoItemStateChanged
        cmpTipoPago();
    }//GEN-LAST:event_cboTipoPagoItemStateChanged

    private void txtAbonoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtAbonoStateChanged
        updatePrice();
    }//GEN-LAST:event_txtAbonoStateChanged

     
    private void iconCalendarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconCalendarMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconCalendarMouseClicked

    private void iconPlaceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconPlaceMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconPlaceMouseClicked

    private void iconClockMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconClockMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconClockMouseClicked

    private void iconMailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconMailMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconMailMouseClicked

    private void iconGenderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconGenderMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconGenderMouseClicked

    private void iconDniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconDniMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconDniMouseClicked

    private void txtTelefonoCliente1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoCliente1KeyTyped
        int largo = 12;
        if(txtTelefonoCliente1.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtTelefonoCliente1KeyTyped

    private void txtCiudadKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCiudadKeyTyped
        int largo = 45;
        if(txtCiudad.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtCiudadKeyTyped

    private void txtComunaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtComunaKeyTyped
        int largo = 45;
        if(txtComuna.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtComunaKeyTyped

    private void txtDireccionClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDireccionClienteKeyTyped
        int largo = 45;
        if(txtDireccionCliente.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtDireccionClienteKeyTyped

    private void txtMailClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMailClienteKeyTyped
        int largo = 45;
        if(txtMailCliente.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtMailClienteKeyTyped

    private void txtMailClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMailClienteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMailClienteActionPerformed

    private void txtTelefonoCliente2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTelefonoCliente2KeyTyped
        int largo = 12;
        if(txtTelefonoCliente2.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtTelefonoCliente2KeyTyped

    private void txtNombreClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNombreClienteKeyTyped
        int largo = 45;
        if(txtNombreCliente.getText().length() >= largo){
            evt.consume();
            errorLargo(largo);
        }
    }//GEN-LAST:event_txtNombreClienteKeyTyped

    private void txtRutClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRutClienteKeyTyped
        
    }//GEN-LAST:event_txtRutClienteKeyTyped

    private void txtRutClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRutClienteActionPerformed

    }//GEN-LAST:event_txtRutClienteActionPerformed

    private void txtRutClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRutClienteFocusLost
        
    }//GEN-LAST:event_txtRutClienteFocusLost

    private void iconAddressMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconAddressMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconAddressMouseClicked

    private void iconPhone2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconPhone2MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconPhone2MouseClicked

    private void iconPhone1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iconPhone1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_iconPhone1MouseClicked

    private void txtNombreClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreClienteFocusLost

    }//GEN-LAST:event_txtNombreClienteFocusLost

    private void txtTelefonoCliente1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoCliente1FocusLost

    }//GEN-LAST:event_txtTelefonoCliente1FocusLost

    private void txtTelefonoCliente2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTelefonoCliente2FocusLost

    }//GEN-LAST:event_txtTelefonoCliente2FocusLost

    private void txtDireccionClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDireccionClienteFocusLost

    }//GEN-LAST:event_txtDireccionClienteFocusLost

    private void txtComunaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtComunaFocusLost

    }//GEN-LAST:event_txtComunaFocusLost

    private void txtCiudadFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCiudadFocusLost

    }//GEN-LAST:event_txtCiudadFocusLost

    private void txtMailClienteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMailClienteFocusLost

    }//GEN-LAST:event_txtMailClienteFocusLost

    private void cboSexoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboSexoItemStateChanged

    }//GEN-LAST:event_cboSexoItemStateChanged

    private void btnImprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirMouseClicked
//        CursorUtils.cursorWAIT(this);
//        cotizar();
//        CursorUtils.cursorDF(this);
        OptionPane.showMsg("Opción no disponible", "Contacte con su proveedor de software para activar esta característica", 2);
    }//GEN-LAST:event_btnImprimirMouseClicked

    private void btnImprimirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirMouseEntered
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnImprimir.getIcon().toString()))));
    }//GEN-LAST:event_btnImprimirMouseEntered

    private void btnImprimirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnImprimirMouseExited
        btnImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnImprimir.getIcon().toString()))));
    }//GEN-LAST:event_btnImprimirMouseExited

    private void btnAbonarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbonarMouseClicked
        guardarAbono();
    }//GEN-LAST:event_btnAbonarMouseClicked

    private void btnAbonarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbonarMouseEntered
        btnAbonar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnAbonar.getIcon().toString()))));
    }//GEN-LAST:event_btnAbonarMouseEntered

    private void btnAbonarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbonarMouseExited
        btnAbonar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnAbonar.getIcon().toString()))));
    }//GEN-LAST:event_btnAbonarMouseExited

    private void txtAbonoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtAbonoPropertyChange
        
    }//GEN-LAST:event_txtAbonoPropertyChange

    private void txtRutClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRutClienteKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRutClienteKeyReleased

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        txtBuscar.addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(final KeyEvent e) {
                //                trs.setRowFilter(RowFilter.regexFilter(txtBuscar.getText(), 1));
                trs.setRowFilter(RowFilter.regexFilter("(?i)"+txtBuscar.getText(), 0,1,2,3,4,5,7,8,9,10));
            }

        });

        trs = new TableRowSorter(modelo);

        tblListar.setRowSorter(trs);
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void btnHistorialMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHistorialMouseClicked
        OptionPane.showMsg("Historial de abonos", mostrarAbonos(VENTA.getCod()), 1);
    }//GEN-LAST:event_btnHistorialMouseClicked

    private void btnHistorialMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHistorialMouseEntered
        btnHistorial.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnHistorial.getIcon().toString()))));
    }//GEN-LAST:event_btnHistorialMouseEntered

    private void btnHistorialMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHistorialMouseExited
        btnHistorial.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnHistorial.getIcon().toString()))));
    }//GEN-LAST:event_btnHistorialMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAbonar;
    private javax.swing.JLabel btnHistorial;
    private javax.swing.JLabel btnImprimir;
    private javax.swing.JComboBox<String> cboSexo;
    private javax.swing.JComboBox<String> cboTipoPago;
    private javax.swing.JLabel iconAddress;
    private javax.swing.JLabel iconCalendar;
    private javax.swing.JLabel iconClock;
    private javax.swing.JLabel iconDni;
    private javax.swing.JLabel iconGender;
    private javax.swing.JLabel iconMail;
    private javax.swing.JLabel iconPhone1;
    private javax.swing.JLabel iconPhone2;
    private javax.swing.JLabel iconPlace;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblDescuento;
    private javax.swing.JLabel lblInventario;
    private javax.swing.JLabel lblMessageStatus;
    private javax.swing.JTable tblListar;
    private javax.swing.JSpinner txtAbono;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCiudad;
    private javax.swing.JTextField txtComuna;
    private javax.swing.JTextField txtDescuento;
    private javax.swing.JTextField txtDireccionCliente;
    private javax.swing.JLabel txtEstado;
    private javax.swing.JLabel txtFecha;
    private javax.swing.JLabel txtHora;
    private javax.swing.JLabel txtLugar;
    private javax.swing.JTextField txtMailCliente;
    private javax.swing.JLabel txtNacimiento;
    private javax.swing.JTextField txtNombreCliente;
    private javax.swing.JTextArea txtObs;
    private javax.swing.JTextField txtRutCliente;
    private javax.swing.JTextField txtSaldo;
    private javax.swing.JTextField txtTelefonoCliente1;
    private javax.swing.JTextField txtTelefonoCliente2;
    private javax.swing.JTextField txtTotal;
    // End of variables declaration//GEN-END:variables
    private void load(){
        try{
            modelo.setNumRows(0);
            for (Object object : detalleVenta) {
                Detalle temp = (Detalle)object;
                Object aux = GV.searchInList(temp.getIdItem(), listItems, new Item());
                String ivaV = GV.strToPrice(temp.getPrecioUnitario());
                String ivaT = GV.strToPrice(temp.getPrecioUnitario()*temp.getCantidad());
                
                String des = (aux!=null)?((Item)aux).getDescripcion():"";
                Object[] fila = new Object[5];
                fila[0] = temp.getIdItem();
                fila[1] = des;
                fila[2] = temp.getCantidad();
                fila[3] = ivaV;
                fila[4] = ivaT;
                
                modelo.addRow(fila);
            }
            tblListar.updateUI();
            if(tblListar.getRowCount() == 0){
                OptionPane.showMsg("Agregue productos a su inventario", "No existen productos registrados para vender.",1);
            }
            
        }catch(Exception e){
            OptionPane.showMsg("Ocurrió un error inesperado", "Ocurrió un error inesperado al cargar valores en la tabla, ["+e.getMessage()+"]",3);
        }
    }
    
    private void updatePrice(){
        int total = VENTA.getValorTotal();
        txtTotal.setText(GV.strToPrice(total));
        txtSaldo.setText(GV.strToPrice(VENTA.getSaldo()));
        commitSpinner();
        int abono = (int)txtAbono.getValue();
        int descuento = VENTA.getDescuento();
        txtDescuento.setText(GV.strToPrice(descuento));
        if(abono >= 0){
            if(descuento > total){
                descuento = total;
            }
            int saldo = VENTA.getSaldo();
            if(abono <= saldo){
                saldo = saldo-abono;
                txtSaldo.setText(GV.strToPrice(GV.roundPrice(saldo)));
                return;
            }
        }
        txtAbono.setValue(0);
    }
    
    
    private void cargarCbos() {
        cboSexo.removeAllItems();
        cboSexo.addItem("Sin Seleccionar");
        cboSexo.addItem("Femenino");
        cboSexo.addItem("Masculino");
        
        
        cboTipoPago.removeAllItems();
        cboTipoPago.addItem("Seleccione");
        for (Object temp : listTipoPagos) {
            cboTipoPago.addItem(((TipoPago)temp).getNombre());
        }
    }
    
    private void errorLargo(int largo) {
        OptionPane.showMsg( "Datos mal ingresados", "Error de ingreso de datos, \n"
                    + "los datos ingresados deben tener un maximo de "+largo+" caracteres.", JOptionPane.WARNING_MESSAGE);
    }
    
    private void msgWarning(String message){
        message = GV.getStr(message);
        if(message.isEmpty()){
            lblMessageStatus.setText("");
            lblMessageStatus.setVisible(false);
        }else{
            lblMessageStatus.setText(message);
            lblMessageStatus.setForeground(Color.black);
            lblMessageStatus.setVisible(true);
        }
    }
    
    private void msgRejectedClear(){
        msgRejected(null);
    }
    
    private boolean cmpTipoPago(){
        commitSpinner();
        if(GV.strToNumber(txtAbono.getValue().toString()) != 0){
            if(cboTipoPago.getSelectedIndex() == 0){
                msgRejected("Debe registrar un medio de pago");
                return false;
            }else{
                String nombre = (String) cboTipoPago.getSelectedItem();
                TipoPago tipoPago = ((TipoPago)GV.searchInList(nombre, listTipoPagos , new TipoPago()));
                if(tipoPago == null){
                    msgRejected("Debe registrar un medio de pago");
                    return false;
                }
            } 
        }else{
            if(GV.strToNumber(txtTotal.getText()) != 0){
                msgWarning("No se ha registrado un abono");
            }
        }
        msgRejectedClear();
        return true;
    }
    
    /**
     * muestra un mensaje en el panel, si el mensaje es vacío o nulo no aparece
     * @param message 
     */
    private void msgRejected(String message) {
        message = GV.getStr(message);
        if(message.isEmpty()){
            lblMessageStatus.setText("");
            lblMessageStatus.setVisible(false);
        }else{
            lblMessageStatus.setText(message);
            lblMessageStatus.setForeground(Color.red);
            lblMessageStatus.setVisible(true);
        }
    }
    
    private boolean commitSpinner() {
        boolean value = true;
        try {
            txtAbono.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(VVenta.class.getName()).log(Level.SEVERE, null, ex);
            GV.mensajeExcepcion("El abono ingresado es incorrecto\n"+ex.getMessage(), 2);
            value = false;
        }
        return value;
    }
    
    private void loadStaticObjects() {
        detalleVenta = load.listar("ID_VENTA-"+VENTA.getCod(), new Detalle());
        stInventario = new Inventario();
        try {
            stInventario = (Inventario)load.get(GlobalValuesVariables.getInventarioName(), 0, new Inventario());
        } catch (InstantiationException | IllegalAccessException | SQLException | ClassNotFoundException ex) {
            Logger.getLogger(VCrearVenta.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(stInventario == null){
            stInventario = new Inventario();
        }
        listTipoPagos = load.listar("0", new TipoPago());
        GlobalValuesVariables.setInventaryChooser(stInventario.getId());
        listItems = load.listar("0", new Item());
        GlobalValuesVariables.setInventaryChooser(0);
        cargarCbos();
    }
    
    private void loadData(){
        /*--------CLIENTE*/
        Cliente cli = VENTA.getCliente();
        if(cli != null){
            txtRutCliente.setText(cli.getCod());
            txtNombreCliente.setText(cli.getNombre());
            txtTelefonoCliente1.setText(cli.getTelefono1());
            txtTelefonoCliente2.setText(cli.getTelefono2());
            txtDireccionCliente.setText(cli.getDireccion());
            txtComuna.setText(cli.getComuna());
            txtCiudad.setText(cli.getCiudad());
            txtMailCliente.setText(cli.getEmail());
            cboSexo.setSelectedIndex(cli.getSexo());
            txtNacimiento.setText(GV.dateToString(cli.getNacimiento(), "dd/MM/yyyy"));
        }
        /*------DATOS ENTREGA*/
        txtFecha.setText("Fecha: "+GV.dateToString(VENTA.getFechaEntrega(), "dd.mm.yyyy"));
        txtHora.setText("Hora: "+VENTA.getHoraEntrega());
        txtLugar.setText("Lugar: "+VENTA.getLugarEntrega());
        updateEstadoVenta();
        /*------OBSERVACIONES*/
        txtObs.setText(VENTA.getObservacion());
    }
    
    private String mostrarAbonos(String codVenta){
        String[][] abonos = (String[][])GV.listarAbonos(codVenta);
        int monto = 0;
        int i = 0;
        String desc = "";
        if(abonos != null){
            for (i = 0; i < abonos.length; i++) {
                monto = monto + GV.strToNumber(abonos[i][0]);
                desc = desc+abonos[i][0]+", Medio de pago: "+abonos[i][1]+", Fecha: "+abonos[i][2]+"\n";
            }
        }
        desc = desc+"-----------------------------------------------------------\n"
                +"Total abonado: "+GV.strToPrice(monto);
        return desc;
    }
    
    
    private void guardarAbono(){
        if(OptionPane.getConfirmation("Confirmar datos", "¿Estas seguro que deseas registrar un nuevo abono?", 1)){
            try {
                CursorUtils.cursorWAIT(this);
                int saldo = VENTA.getSaldo();
                try {
                    txtAbono.commitEdit();
                } catch (ParseException ex) {
                    Logger.getLogger(VVenta.class.getName()).log(Level.SEVERE, null, ex);
                    GV.mensajeExcepcion("El saldo ingresado es incorrecto:\n"+ex.getMessage(), 2);
                    txtAbono.setValue(0);
                    updatePrice();
                    CursorUtils.cursorDF(this);
                    return;
                }
                int abono = (int)txtAbono.getValue();
                int newSaldo = (saldo-abono);
                if(newSaldo>=0 && abono > 0){
                    String medioPago = (cboTipoPago.getSelectedIndex() == 0)? "":cboTipoPago.getSelectedItem().toString();
                    TipoPago tp = null;
                    if(!medioPago.isEmpty()){
                        tp = (TipoPago)load.get(medioPago, 0, new TipoPago());
                    }
                    if(tp == null){
                        OptionPane.showMsg("Operación cancelada", "Para registrar un abono debe ingresar un tipo de pago correcto.",2);
                        msgRejected("No ha seleccionado un medio de pago.");
                        txtAbono.setValue(0);
                        updatePrice();
                        CursorUtils.cursorDF(this);
                        return;
                    }
                    
                    HistorialPago hp = new HistorialPago(null, new Date(), abono, tp.getId(), VENTA.getCod(), 1, null, 0);
                    VENTA.setSaldo(newSaldo);
                    if(newSaldo == 0 && (VENTA.getEstado() == GlobalValuesVariables.estadoVentaPending())){
                        VENTA.setEstado(GlobalValuesVariables.estadoVentaPaid());
                        updateEstadoVenta();
                    }
                    load.update(VENTA);
                    load.add(hp);
                    OptionPane.showMsg("Abono registrado", "Se ha registrado un nuevo abono",1);
                    txtAbono.setValue(0);
                    loadData();
                    updatePrice();
                    CursorUtils.cursorDF(this);
                    msgRejectedClear();
                    return;
                }
                if(newSaldo < 0){
                    msgRejected("El abono ingresado excede el saldo.");
                }
                OptionPane.showMsg("Operación cancelada", "Para registrar un abono debe ingresar un valor correcto.",2);
                CursorUtils.cursorDF(this);
            } catch (InstantiationException | IllegalAccessException | SQLException | ClassNotFoundException ex) {
                Logger.getLogger(VVenta.class.getName()).log(Level.SEVERE, null, ex);
                OptionPane.showMsg("Error de sistema", "Ha ocurrido un error interno,\n"
                        + "Póngase en contacto con ssu proveedor de software para dar solucion a este problema\n"
                        + "Detalle: Error en VFicha()>btnAbonar()", 3);
            }
        }else{
            txtAbono.setValue(0);
            updatePrice();
        }
    }
    
    private void updateEstadoVenta(){
        String despacho="";
        if(VENTA.getDespacho().getRut().isEmpty() && VENTA.getEstado() == GlobalValuesVariables.estadoVentaPaid()){
            despacho = "con despacho pendiente";
        }
        txtEstado.setText("Estado: "+GlobalValuesVariables.obtenerEstadoVenta(VENTA.getEstado())+" "+despacho);
    }
}

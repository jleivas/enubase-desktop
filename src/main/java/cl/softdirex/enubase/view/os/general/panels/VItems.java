/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cl.softdirex.enubase.view.os.general.panels;

import cl.softdirex.enubase.dao.Dao;
import cl.softdirex.enubase.entities.Inventario;
import cl.softdirex.enubase.entities.Item;
import cl.softdirex.enubase.entities.Proveedor;
import cl.softdirex.enubase.entities.RegistroBaja;
import cl.softdirex.enubase.sync.entities.LocalInventario;
import cl.softdirex.enubase.utils.Boton;
import cl.softdirex.enubase.utils.CursorUtils;
import cl.softdirex.enubase.utils.GV;
import cl.softdirex.enubase.utils.GlobalValuesVariables;
import cl.softdirex.enubase.utils.Icons;
import cl.softdirex.enubase.utils.PropertiesUtils;
import cl.softdirex.enubase.utils.StEntities;
import cl.softdirex.enubase.view.notifications.OptionPane;
import cl.softdirex.enubase.view.notifications.panels.content.OpanelReporteItems;
import cl.softdirex.enubase.view.notifications.panels.input.OpanelIncreaseStock;
import cl.softdirex.enubase.view.principal.ContentAdmin;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.Color;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.RowFilter;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author home
 */
public class VItems extends javax.swing.JPanel {
    Boton boton = new Boton();
    Dao load= new Dao();
    private static Color rojo = Color.red;
    private static Color negro = Color.black;
    private static Item stItem =  null;
    private static Inventario stInventario = null;
    private static String inventaryName = GlobalValuesVariables.getInventarioName();
    private static List<Object> proveedores;
    
    private static List<String> clasificaciones = PropertiesUtils.getClasificaciones();
    private static List<String> unidades = PropertiesUtils.getUnidades();
        
    TableRowSorter trs;
    DefaultTableModel modelo = new DefaultTableModel() {
           @Override
           public boolean isCellEditable(int fila, int columna) {
               return false; //Con esto conseguimos que la tabla no se pueda editar
           }
        };
    /**
     * Creates new form VClientes
     */
    public VItems() throws SQLException, ClassNotFoundException {
        ContentAdmin.lblTitle.setText("Items");
        initComponents();
        loadPanels(1);          
        modelo.addColumn("Codigo");
        modelo.addColumn("Descripci√≥n");
        modelo.addColumn("Precio");
        modelo.addColumn("Stock");
        tblListar.setModel(modelo);
        proveedores = load.listar("0", new Proveedor());
        cargarCbos();
        autocompletar();
        cboInventarioFilter.setSelectedItem(inventaryName);
        System.out.println(inventaryName);
        try {
            stInventario = (Inventario)load.get(cboInventarioFilter.getSelectedItem().toString(), 0, new Inventario());
        } catch (InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(VItems.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        load();
        loadPanels(1);
        CursorUtils.cursorDF();
        cDF();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cboMostrar = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListar = new javax.swing.JTable();
        btnAbrir = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JLabel();
        btnRestaurar = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        btnStockDown = new javax.swing.JLabel();
        cboInventarioFilter = new javax.swing.JComboBox<>();
        btnLoad = new javax.swing.JLabel();
        btnStockUp = new javax.swing.JLabel();
        btnReporte = new javax.swing.JLabel();
        pnl1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtCod1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        btnGuardar = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtPrecAct1 = new javax.swing.JSpinner();
        txtProveedor = new javax.swing.JTextField();
        txtDesc1 = new javax.swing.JTextField();
        cboClasificacion = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        txtStock1 = new javax.swing.JSpinner();
        txtPrecRef1 = new javax.swing.JSpinner();
        jLabel15 = new javax.swing.JLabel();
        txtStockMin1 = new javax.swing.JSpinner();
        jLabel24 = new javax.swing.JLabel();
        txtInventario1 = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        cboUnidades = new javax.swing.JComboBox<>();
        pnl2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtCod2 = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JLabel();
        txtPrecAct2 = new javax.swing.JSpinner();
        txtProveedor2 = new javax.swing.JTextField();
        txtDesc2 = new javax.swing.JTextField();
        cboClasificacion2 = new javax.swing.JComboBox<>();
        jLabel31 = new javax.swing.JLabel();
        txtPrecRef2 = new javax.swing.JSpinner();
        jLabel32 = new javax.swing.JLabel();
        txtStockMin2 = new javax.swing.JSpinner();
        btnCancel = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        txtInventario2 = new javax.swing.JTextField();
        txtStock2 = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        cboUnidades2 = new javax.swing.JComboBox<>();
        pnl3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtCod3 = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        btnUpdate2 = new javax.swing.JLabel();
        txtDesc3 = new javax.swing.JTextField();
        cboClasificacion3 = new javax.swing.JComboBox<>();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtCausaReduccion = new javax.swing.JTextArea();
        txtStockaReducir = new javax.swing.JSpinner();
        jLabel40 = new javax.swing.JLabel();
        btnCancel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Lista de registros", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 0, 11))); // NOI18N

        cboMostrar.setFont(new java.awt.Font("Segoe UI Light", 1, 18)); // NOI18N
        cboMostrar.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Activos", "Eliminados" }));
        cboMostrar.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboMostrarItemStateChanged(evt);
            }
        });

        tblListar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Codigo", "Descripcion", "Precio", "Stock"
            }
        ));
        jScrollPane1.setViewportView(tblListar);

        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Eye_50px.png"))); // NOI18N
        btnAbrir.setToolTipText("Cargar");
        btnAbrir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAbrirMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnAbrirMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnAbrirMouseExited(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Trash_50px.png"))); // NOI18N
        btnEliminar.setToolTipText("Eliminar");
        btnEliminar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnEliminarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnEliminarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnEliminarMouseExited(evt);
            }
        });

        btnRestaurar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Data_Backup_50px.png"))); // NOI18N
        btnRestaurar.setToolTipText("Restaurar");
        btnRestaurar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRestaurarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnRestaurarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnRestaurarMouseExited(evt);
            }
        });

        jLabel19.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Search_Property_25px_1.png"))); // NOI18N

        txtBuscar.setToolTipText("Buscar");
        txtBuscar.setBorder(null);
        txtBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarActionPerformed(evt);
            }
        });
        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtBuscarKeyTyped(evt);
            }
        });

        btnStockDown.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/stock_Down_50px.png"))); // NOI18N
        btnStockDown.setToolTipText("Reducir Stock");
        btnStockDown.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnStockDownMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnStockDownMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnStockDownMouseExited(evt);
            }
        });

        cboInventarioFilter.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboInventarioFilter.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboInventarioFilter.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cboInventarioFilterItemStateChanged(evt);
            }
        });

        btnLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Next_25px.png"))); // NOI18N
        btnLoad.setToolTipText("Cargar Inventario");
        btnLoad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnLoadMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnLoadMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnLoadMouseExited(evt);
            }
        });

        btnStockUp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/stock_Up_50px.png"))); // NOI18N
        btnStockUp.setToolTipText("Incrementar Stock");
        btnStockUp.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnStockUpMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnStockUpMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnStockUpMouseExited(evt);
            }
        });

        btnReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Audit_50px.png"))); // NOI18N
        btnReporte.setToolTipText("Ver reporte de inventario");
        btnReporte.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnReporteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnReporteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnReporteMouseExited(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 633, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(btnAbrir)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar)
                .addGap(18, 18, 18)
                .addComponent(btnRestaurar)
                .addGap(21, 21, 21)
                .addComponent(btnReporte)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStockUp)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnStockDown)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cboMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cboInventarioFilter, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnLoad)
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel19)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 4, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(cboInventarioFilter, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLoad, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnAbrir, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnRestaurar, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cboMostrar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStockDown, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnStockUp, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnReporte, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(36, 36, 36))
        );

        pnl1.setBackground(new java.awt.Color(255, 255, 255));
        pnl1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Crear nuevo registro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 0, 11))); // NOI18N

        jLabel1.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel1.setText("Codigo");

        jLabel2.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel2.setText("Descripcion");

        txtCod1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCod1KeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel5.setText("Clasificacion");

        jLabel8.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel8.setText("Precio unitario");

        jLabel9.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel9.setText("Val. compra/un");

        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Save_50px.png"))); // NOI18N
        btnGuardar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnGuardarMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnGuardarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnGuardarMouseExited(evt);
            }
        });

        jLabel20.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel20.setText("Proveedor");

        txtPrecAct1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        txtProveedor.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtProveedorFocusLost(evt);
            }
        });
        txtProveedor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtProveedorActionPerformed(evt);
            }
        });
        txtProveedor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProveedorKeyTyped(evt);
            }
        });

        txtDesc1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDesc1KeyTyped(evt);
            }
        });

        cboClasificacion.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboClasificacion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel13.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel13.setText("Stock");

        txtStock1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        txtPrecRef1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel15.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel15.setText("Stock m√≠nimo");

        txtStockMin1.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel24.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel24.setText("Ubicaci√≥n");

        txtInventario1.setEditable(false);
        txtInventario1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInventario1KeyTyped(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel7.setText("Tipo unidad");

        cboUnidades.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboUnidades.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout pnl1Layout = new javax.swing.GroupLayout(pnl1);
        pnl1.setLayout(pnl1Layout);
        pnl1Layout.setHorizontalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl1Layout.createSequentialGroup()
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(pnl1Layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)
                            .addComponent(txtCod1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnl1Layout.createSequentialGroup()
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(15, 15, 15)
                            .addComponent(txtDesc1))
                        .addGroup(pnl1Layout.createSequentialGroup()
                            .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(21, 21, 21)
                            .addComponent(jLabel24, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 6, Short.MAX_VALUE)
                            .addComponent(txtInventario1, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(pnl1Layout.createSequentialGroup()
                            .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(pnl1Layout.createSequentialGroup()
                                    .addGap(5, 5, 5)
                                    .addComponent(cboClasificacion, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGroup(pnl1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(pnl1Layout.createSequentialGroup()
                                            .addComponent(txtPrecRef1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(4, 4, 4)
                                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pnl1Layout.createSequentialGroup()
                                            .addComponent(txtPrecAct1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtStock1)
                                        .addComponent(txtStockMin1)))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl1Layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(cboUnidades, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addComponent(btnGuardar, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        pnl1Layout.setVerticalGroup(
            pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl1Layout.createSequentialGroup()
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtCod1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel1)))
                .addGap(6, 6, 6)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(jLabel2))
                    .addComponent(txtDesc1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(txtProveedor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24)
                    .addComponent(txtInventario1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cboUnidades, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cboClasificacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtStock1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8)
                                .addComponent(txtPrecAct1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel13))))
                .addGap(6, 6, 6)
                .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtPrecRef1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtStockMin1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addGroup(pnl1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel15))))
                .addGap(6, 6, 6)
                .addComponent(btnGuardar))
        );

        pnl2.setBackground(new java.awt.Color(204, 204, 255));
        pnl2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Abrir registro", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 0, 11))); // NOI18N

        jLabel6.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel6.setText("Codigo");

        jLabel18.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel18.setText("Descripcion");

        jLabel21.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel21.setText("Proveedor");

        txtCod2.setEditable(false);
        txtCod2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCod2KeyTyped(evt);
            }
        });

        jLabel25.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel25.setText("Clasificacion");

        jLabel27.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel27.setText("Precio actual");

        jLabel28.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel28.setText("Precio Ref.");

        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Save_50px.png"))); // NOI18N
        btnUpdate.setToolTipText("Modificar");
        btnUpdate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdateMouseExited(evt);
            }
        });

        txtPrecAct2.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        txtProveedor2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtProveedor2FocusLost(evt);
            }
        });
        txtProveedor2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtProveedor2KeyTyped(evt);
            }
        });

        txtDesc2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDesc2KeyTyped(evt);
            }
        });

        cboClasificacion2.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboClasificacion2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel31.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel31.setText("Stock");

        txtPrecRef2.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        jLabel32.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel32.setText("Stock m√≠nimo");

        txtStockMin2.setModel(new javax.swing.SpinnerNumberModel(0, 0, null, 1));

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Cancel_50px.png"))); // NOI18N
        btnCancel.setToolTipText("Cancelar");
        btnCancel.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancelMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancelMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancelMouseExited(evt);
            }
        });

        jLabel35.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel35.setText("Ubicaci√≥n");

        txtInventario2.setEditable(false);
        txtInventario2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtInventario2KeyTyped(evt);
            }
        });

        txtStock2.setEditable(false);
        txtStock2.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtStock2PropertyChange(evt);
            }
        });

        jLabel26.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel26.setText("Tipo unidad");

        cboUnidades2.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboUnidades2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout pnl2Layout = new javax.swing.GroupLayout(pnl2);
        pnl2.setLayout(pnl2Layout);
        pnl2Layout.setHorizontalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl2Layout.createSequentialGroup()
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel21, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel28))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl2Layout.createSequentialGroup()
                        .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDesc2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cboClasificacion2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pnl2Layout.createSequentialGroup()
                        .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl2Layout.createSequentialGroup()
                                    .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(txtCod2)
                                        .addComponent(txtProveedor2))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel35, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(pnl2Layout.createSequentialGroup()
                                    .addComponent(txtPrecAct2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel31, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)))
                            .addGroup(pnl2Layout.createSequentialGroup()
                                .addComponent(txtPrecRef2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel32, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtStockMin2, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtStock2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtInventario2, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(20, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnl2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate)
                .addContainerGap())
            .addGroup(pnl2Layout.createSequentialGroup()
                .addComponent(jLabel26, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cboUnidades2, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnl2Layout.setVerticalGroup(
            pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl2Layout.createSequentialGroup()
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtCod2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(txtDesc2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel35)
                    .addComponent(txtInventario2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtProveedor2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(cboUnidades2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25)
                    .addComponent(cboClasificacion2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel27)
                    .addComponent(txtPrecAct2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(txtStock2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel28)
                    .addComponent(txtPrecRef2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel32)
                        .addComponent(txtStockMin2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(11, 11, 11)
                .addGroup(pnl2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnUpdate)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnl3.setBackground(new java.awt.Color(204, 204, 255));
        pnl3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Registro de bajas", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI Light", 0, 11))); // NOI18N

        jLabel10.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel10.setText("Codigo");

        jLabel22.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel22.setText("Descripcion");

        txtCod3.setEditable(false);
        txtCod3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCod3KeyTyped(evt);
            }
        });

        jLabel33.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel33.setText("Clasificacion");

        jLabel34.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel34.setText("Causa de la reducci√≥n del Stock");

        btnUpdate2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Save_50px.png"))); // NOI18N
        btnUpdate2.setToolTipText("Registrar baja");
        btnUpdate2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnUpdate2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnUpdate2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnUpdate2MouseExited(evt);
            }
        });

        txtDesc3.setEditable(false);
        txtDesc3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDesc3KeyTyped(evt);
            }
        });

        cboClasificacion3.setFont(new java.awt.Font("Segoe UI Light", 1, 11)); // NOI18N
        cboClasificacion3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cboClasificacion3.setEnabled(false);

        txtCausaReduccion.setColumns(20);
        txtCausaReduccion.setRows(5);
        jScrollPane4.setViewportView(txtCausaReduccion);

        txtStockaReducir.setModel(new javax.swing.SpinnerNumberModel());

        jLabel40.setFont(new java.awt.Font("Segoe UI Light", 0, 11)); // NOI18N
        jLabel40.setText("Cantidad a reducir");

        btnCancel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/icons8_Cancel_50px.png"))); // NOI18N
        btnCancel2.setToolTipText("Cancelar");
        btnCancel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCancel2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnCancel2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnCancel2MouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnl3Layout = new javax.swing.GroupLayout(pnl3);
        pnl3.setLayout(pnl3Layout);
        pnl3Layout.setHorizontalGroup(
            pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl3Layout.createSequentialGroup()
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jLabel22, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                        .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4)
                    .addComponent(txtDesc3)
                    .addComponent(cboClasificacion3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnl3Layout.createSequentialGroup()
                        .addComponent(txtStockaReducir, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCancel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnUpdate2))
                    .addGroup(pnl3Layout.createSequentialGroup()
                        .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel34, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCod3, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 111, Short.MAX_VALUE))))
        );
        pnl3Layout.setVerticalGroup(
            pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnl3Layout.createSequentialGroup()
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtCod3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(txtDesc3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel33)
                    .addComponent(cboClasificacion3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(6, 6, 6)
                .addComponent(jLabel34)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel40)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtStockaReducir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnl3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnCancel2, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnUpdate2, javax.swing.GroupLayout.Alignment.TRAILING)))
                .addGap(0, 2, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnl2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnl3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(pnl2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnl1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(pnl3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnAbrirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbrirMouseClicked
        try{
            cWT();
            int fila = tblListar.getSelectedRow();
            String codigo = tblListar.getValueAt(fila, 0).toString();
            
            abrirItem(codigo);
            cDF();
        }catch(Exception e){
            OptionPane.showMsg("Seleccione un elemento en la tabla","Debe hacer clic sobre un elemento de la tabla,\n"
                    + "Luego presione el bot√≥n \"Ver\".",  2);
            cDF();
        }
    }//GEN-LAST:event_btnAbrirMouseClicked

    private void btnEliminarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseClicked
        try{
            cWT();
            int fila = tblListar.getSelectedRow();
            String cod = tblListar.getValueAt(fila, 0).toString();
            String invName = cboInventarioFilter.getSelectedItem().toString();
            
            if(OptionPane.getConfirmation("Eliminar registro", "¬øEsta seguro que desea eliminar el producto "+cod+"?", 2)){
                cWT();
                Item temp = (Item)load.getItem(cod,invName);
                if(!load.restoreOrDeleteFromUI(temp)){
                    cDF();
                    return;
                }
            }
            cargarDatos("0");
            cDF();
        }catch(Exception e){
            OptionPane.showMsg("Seleccione Item","Error al cargar valores,\n"
                    + "es posible que no se haya seleccionado un registro:\n"
                    + "Debe hacer clic sobre un elemento de la tabla,\n"
                    + "Luego presione el bot√≥n \"Ver\".\n"
                    + "Otro posible error: el valor seleccionado no tiene un identificador v√°lido.",2);
            cDF();
        }
    }//GEN-LAST:event_btnEliminarMouseClicked

    private void btnRestaurarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRestaurarMouseClicked
        try{
            cWT();
            int fila = tblListar.getSelectedRow();
            String cod = tblListar.getValueAt(fila, 0).toString();
            if(OptionPane.getConfirmation("Confirmaci√≥n de registro", "¬øEsta seguro que desea restaurar este registro?", 1)){
                cWT();
                String invName = cboInventarioFilter.getSelectedItem().toString();
                Item temp = (Item)load.getItem(cod,invName);
                if(!load.restoreOrDeleteFromUI(temp)){
                    cDF();
                    return;
                }
                cargarDatos("-1");
                cDF();
            }
        }catch(Exception e){
            OptionPane.showMsg("Seleccione Item","Error al cargar valores,\n"
                    + "es posible que no se haya seleccionado un registro:\n"
                    + "Debe hacer clic sobre un elemento de la tabla,\n"
                    + "Luego presione el bot√≥n \"Ver\".\n"
                    + "Otro posible error: el valor seleccionado no tiene un identificador v√°lido.",2);
            cDF();
        }
    }//GEN-LAST:event_btnRestaurarMouseClicked

    private void btnAbrirMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbrirMouseEntered
        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnAbrir.getIcon().toString()))));
    }//GEN-LAST:event_btnAbrirMouseEntered

    private void btnAbrirMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAbrirMouseExited
        btnAbrir.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnAbrir.getIcon().toString()))));
    }//GEN-LAST:event_btnAbrirMouseExited

    private void btnEliminarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseEntered
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnEliminar.getIcon().toString()))));
    }//GEN-LAST:event_btnEliminarMouseEntered

    private void btnEliminarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnEliminarMouseExited
        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnEliminar.getIcon().toString()))));
    }//GEN-LAST:event_btnEliminarMouseExited

    private void btnRestaurarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRestaurarMouseEntered
        btnRestaurar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnRestaurar.getIcon().toString()))));
    }//GEN-LAST:event_btnRestaurarMouseEntered

    private void btnRestaurarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRestaurarMouseExited
        btnRestaurar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnRestaurar.getIcon().toString()))));
    }//GEN-LAST:event_btnRestaurarMouseExited

    private void cboMostrarItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboMostrarItemStateChanged
        cWT();
        load();
        cDF();
    }//GEN-LAST:event_cboMostrarItemStateChanged

    private void txtBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarActionPerformed

    private void txtBuscarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyTyped
        txtBuscar.addKeyListener(new KeyAdapter() {

            @Override
            public void keyReleased(final KeyEvent e) {
//                trs.setRowFilter(RowFilter.regexFilter(txtBuscar.getText(), 1));
                trs.setRowFilter(RowFilter.regexFilter("(?i)"+txtBuscar.getText(), 0,1,2,3,4,5,7,8,9,10));
            }
            
        });
        
        
        
        trs = new TableRowSorter(modelo);
        
        tblListar.setRowSorter(trs);
    }//GEN-LAST:event_txtBuscarKeyTyped

    private void btnGuardarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseExited
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnGuardar.getIcon().toString()))));
    }//GEN-LAST:event_btnGuardarMouseExited

    private void btnGuardarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseEntered
        btnGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnGuardar.getIcon().toString()))));
    }//GEN-LAST:event_btnGuardarMouseEntered

    private void btnGuardarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnGuardarMouseClicked
        try {                                        
            cWT();
            String cod = GV.getFilterString(txtCod1.getText());
            String desc = GV.getFilterString(txtDesc1.getText());
            String rut = GV.getFilterString(GV.obtenerCodEntreLlaves(txtProveedor.getText()));
            String idProveedor = "";
            if(GV.searchInList(rut, proveedores, new Proveedor())!=null){
                idProveedor = rut;
            }
            int clasificacion = cboClasificacion.getSelectedIndex();
            int unidad = cboUnidades.getSelectedIndex();
            try {
                txtPrecAct1.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VItems.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al precio actual.", 2);
                cDF();
                return;
            }
            try {
                txtPrecRef1.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VItems.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al precio de referencia.", 2);
                cDF();
                return;
            }
            try {
                txtStock1.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VItems.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al stock.", 2);
                cDF();
                return;
            }
            try {
                txtStockMin1.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VItems.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al stock minimo.", 2);
                cDF();
                return;
            }
            
            int precioAct = (int)txtPrecAct1.getValue();
            int precioRef = (int)txtPrecRef1.getValue();
            int stock = (int)txtStock1.getValue();
            int stockMin  =  (int)txtStockMin1.getValue();
            String inventaryName = txtInventario1.getText();
            Inventario inventario = (Inventario)load.get(inventaryName,0, new Inventario());
            int idInventario=(inventario!=null)?inventario.getId():0;
            Item producto= new Item(cod, "", idProveedor, unidad, clasificacion, desc, precioRef, precioAct, stock, stockMin, idInventario, 1, null, 0);
            
            cWT();
            if(!load.addFromUI(producto)){
               cDF();
               return; 
            }
            cargarDatos("0");
            cDF();
        } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(VItems.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnGuardarMouseClicked

    private void txtCod1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCod1KeyTyped
        GV.validaLargo(evt,txtCod1,45);
    }//GEN-LAST:event_txtCod1KeyTyped

    private void txtProveedorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProveedorKeyTyped
        GV.validaLargo(evt,txtProveedor,45);
    }//GEN-LAST:event_txtProveedorKeyTyped

    private void txtDesc1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDesc1KeyTyped
        GV.validaLargo(evt,txtDesc1,45);
    }//GEN-LAST:event_txtDesc1KeyTyped

    private void txtCod2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCod2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCod2KeyTyped

    private void btnUpdateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseClicked
        updateItem();
    }//GEN-LAST:event_btnUpdateMouseClicked

    private void btnUpdateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseEntered
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnUpdate.getIcon().toString()))));
    }//GEN-LAST:event_btnUpdateMouseEntered

    private void btnUpdateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdateMouseExited
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnUpdate.getIcon().toString()))));
    }//GEN-LAST:event_btnUpdateMouseExited

    private void txtDesc2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDesc2KeyTyped
        GV.validaLargo(evt,txtDesc2,45);
    }//GEN-LAST:event_txtDesc2KeyTyped

    private void btnCancelMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseClicked
        limpiarTextField();
        loadPanels(1);
    }//GEN-LAST:event_btnCancelMouseClicked

    private void btnCancelMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseEntered
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnCancel.getIcon().toString()))));
    }//GEN-LAST:event_btnCancelMouseEntered

    private void btnCancelMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancelMouseExited
        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnCancel.getIcon().toString()))));
    }//GEN-LAST:event_btnCancelMouseExited

    private void txtCod3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCod3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCod3KeyTyped

    private void btnUpdate2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate2MouseClicked
        
        try {
            txtStockaReducir.commitEdit();
        } catch (ParseException ex) {
            Logger.getLogger(VItems.class.getName()).log(Level.SEVERE, null, ex);
            GV.mensajeExcepcion("Error en cantidad ingresada.", 2);
            return;
        }
        cWT();
        int cantidad = (int)txtStockaReducir.getValue();
        int newStock = stItem.getStock()- (LocalInventario.stockDescontado(stItem.getCod()) + cantidad);
        if(newStock < 0){
            OptionPane.showMsg("Par√°metros incorrectos", "El monto a reducir debe ser menor o igual al stock del producto.", 2);
            cDF();
            return;
        }
        String obs = txtCausaReduccion.getText();
        if(obs == null || obs.isEmpty() || obs.length() < 10){
            OptionPane.showMsg("Par√°metros obligatorios", "Es necesario introducir una causa v√°lida de la reducci√≥n\n.", 2);
            cDF();
            return;
        }
        if(OptionPane.getConfirmation("Reducci√≥n de stock", "¬øConfirmo que los datos ingresados son correctos?", 2)){
            if(load.decreaseStock(stItem.getCod(), cantidad)){
                RegistroBaja rb = new RegistroBaja(null, new Date(), stItem.getCod(), cantidad, obs+ "\n [Usuario: "+StEntities.USER.getNombre()+" ID_USER:"+StEntities.USER.getId()+"]", 1, null, 0);
                if(!load.addFromUI(rb)){
                    cDF();
                    return;
                }
                cargarDatos("0"); 
            }else{
                OptionPane.showMsg("No es posible reducir el stock", "No se ha podido crear un nuevo registro en la reducci√≥n del stock.\n"
                        + "Debes operar con productos correspondientes a tu inventario local: \"" +GlobalValuesVariables.getInventarioName() + "\"", 2);
                cDF();
                return;
            }
        }else{
            OptionPane.showMsg("Reducci√≥n de stock", "Operaci√≥n cancelada", 1);
        }
        cDF();
    }//GEN-LAST:event_btnUpdate2MouseClicked

    private void btnUpdate2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate2MouseEntered
        btnUpdate2.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnUpdate2.getIcon().toString()))));
    }//GEN-LAST:event_btnUpdate2MouseEntered

    private void btnUpdate2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnUpdate2MouseExited
        btnUpdate2.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnUpdate2.getIcon().toString()))));
    }//GEN-LAST:event_btnUpdate2MouseExited

    private void txtDesc3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDesc3KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDesc3KeyTyped

    private void btnCancel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancel2MouseClicked
        loadPanels(1);
        limpiarTextField();
    }//GEN-LAST:event_btnCancel2MouseClicked

    private void btnCancel2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancel2MouseEntered
        btnCancel2.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnCancel2.getIcon().toString()))));
    }//GEN-LAST:event_btnCancel2MouseEntered

    private void btnCancel2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCancel2MouseExited
        btnCancel2.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnCancel2.getIcon().toString()))));
    }//GEN-LAST:event_btnCancel2MouseExited

    private void btnStockDownMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockDownMouseClicked
        try{
            cWT();
            int fila = tblListar.getSelectedRow();
            String codigo = tblListar.getValueAt(fila, 0).toString();
            
            loadPnlStock(codigo);
            cDF();
        }catch(Exception e){
            OptionPane.showMsg("Seleccione un elemento en la tabla","Debe hacer clic sobre un elemento de la tabla,\n"
                    + "Luego presione el bot√≥n \"Reducir stock\".",  2);
            cDF();
        }
    }//GEN-LAST:event_btnStockDownMouseClicked

    private void btnStockDownMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockDownMouseEntered
        btnStockDown.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnStockDown.getIcon().toString()))));
    }//GEN-LAST:event_btnStockDownMouseEntered

    private void btnStockDownMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockDownMouseExited
        btnStockDown.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnStockDown.getIcon().toString()))));
    }//GEN-LAST:event_btnStockDownMouseExited

    private void cboInventarioFilterItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cboInventarioFilterItemStateChanged
        
    }//GEN-LAST:event_cboInventarioFilterItemStateChanged

    private void btnLoadMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoadMouseExited

        btnLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnLoad.getIcon().toString()))));
    }//GEN-LAST:event_btnLoadMouseExited

    private void btnLoadMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoadMouseEntered
        btnLoad.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnLoad.getIcon().toString()))));
    }//GEN-LAST:event_btnLoadMouseEntered

    private void btnLoadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnLoadMouseClicked
        try {
            cWT();
            inventaryName = cboInventarioFilter.getSelectedItem().toString();
            stInventario = (Inventario)load.get(inventaryName, 0, new Inventario());
            load();
            cDF();
        } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            Logger.getLogger(VItems.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLoadMouseClicked

    private void txtInventario1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInventario1KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInventario1KeyTyped

    private void txtInventario2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtInventario2KeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtInventario2KeyTyped

    private void btnStockUpMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockUpMouseClicked
        increaseStock();
    }//GEN-LAST:event_btnStockUpMouseClicked

    private void btnStockUpMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockUpMouseEntered
        btnStockUp.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnStockUp.getIcon().toString()))));
    }//GEN-LAST:event_btnStockUpMouseEntered

    private void btnStockUpMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnStockUpMouseExited
        btnStockUp.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnStockUp.getIcon().toString()))));
    }//GEN-LAST:event_btnStockUpMouseExited

    private void btnReporteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReporteMouseClicked
        if(GV.licenciaExpirada()){
            OptionPane.showMsg("No se puede generar reporte", "Su licencia ha caducado.\n"
                    + "Renueve su licencia para disfrutar de todas las funcionalidades del sistema\n"
                    + "sin limitaciones", 2);
        }else{
            OptionPane.showOptionPanel(new OpanelReporteItems(), "Reporte de inventario");
        }
    }//GEN-LAST:event_btnReporteMouseClicked

    private void btnReporteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReporteMouseEntered
        btnReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getEnteredIcon(btnReporte.getIcon().toString()))));
    }//GEN-LAST:event_btnReporteMouseEntered

    private void btnReporteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnReporteMouseExited
        btnReporte.setIcon(new javax.swing.ImageIcon(getClass().getResource(Icons.getExitedIcon(btnReporte.getIcon().toString()))));
    }//GEN-LAST:event_btnReporteMouseExited

    private void txtStock2PropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtStock2PropertyChange
        txtStock2.setHorizontalAlignment(4);
    }//GEN-LAST:event_txtStock2PropertyChange

    private void txtProveedor2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtProveedor2KeyTyped
        GV.validaLargo(evt,txtProveedor2,45);
    }//GEN-LAST:event_txtProveedor2KeyTyped

    private void txtProveedorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtProveedorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtProveedorActionPerformed

    private void txtProveedorFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProveedorFocusLost
        String rut = GV.obtenerCodEntreLlaves(txtProveedor.getText());
        if(GV.searchInList(rut, proveedores, new Proveedor())!=null){
            txtProveedor.setForeground(negro);
        }else{
            txtProveedor.setForeground(rojo);
        }
    }//GEN-LAST:event_txtProveedorFocusLost

    private void txtProveedor2FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtProveedor2FocusLost
        String rut = GV.obtenerCodEntreLlaves(txtProveedor2.getText());
        if(GV.searchInList(rut, proveedores, new Proveedor())!=null){
            txtProveedor2.setForeground(negro);
        }else{
            txtProveedor2.setForeground(rojo);
        }
    }//GEN-LAST:event_txtProveedor2FocusLost


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btnAbrir;
    private javax.swing.JLabel btnCancel;
    private javax.swing.JLabel btnCancel2;
    private javax.swing.JLabel btnEliminar;
    private javax.swing.JLabel btnGuardar;
    private javax.swing.JLabel btnLoad;
    private javax.swing.JLabel btnReporte;
    private javax.swing.JLabel btnRestaurar;
    private javax.swing.JLabel btnStockDown;
    private javax.swing.JLabel btnStockUp;
    private javax.swing.JLabel btnUpdate;
    private javax.swing.JLabel btnUpdate2;
    private javax.swing.JComboBox<String> cboClasificacion;
    private javax.swing.JComboBox<String> cboClasificacion2;
    private javax.swing.JComboBox<String> cboClasificacion3;
    private javax.swing.JComboBox<String> cboInventarioFilter;
    private javax.swing.JComboBox<String> cboMostrar;
    private javax.swing.JComboBox<String> cboUnidades;
    private javax.swing.JComboBox<String> cboUnidades2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel pnl1;
    private javax.swing.JPanel pnl2;
    private javax.swing.JPanel pnl3;
    private javax.swing.JTable tblListar;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextArea txtCausaReduccion;
    private javax.swing.JTextField txtCod1;
    private javax.swing.JTextField txtCod2;
    private javax.swing.JTextField txtCod3;
    private javax.swing.JTextField txtDesc1;
    private javax.swing.JTextField txtDesc2;
    private javax.swing.JTextField txtDesc3;
    private javax.swing.JTextField txtInventario1;
    private javax.swing.JTextField txtInventario2;
    private javax.swing.JSpinner txtPrecAct1;
    private javax.swing.JSpinner txtPrecAct2;
    private javax.swing.JSpinner txtPrecRef1;
    private javax.swing.JSpinner txtPrecRef2;
    private javax.swing.JTextField txtProveedor;
    private javax.swing.JTextField txtProveedor2;
    private javax.swing.JSpinner txtStock1;
    private javax.swing.JTextField txtStock2;
    private javax.swing.JSpinner txtStockMin1;
    private javax.swing.JSpinner txtStockMin2;
    private javax.swing.JSpinner txtStockaReducir;
    // End of variables declaration//GEN-END:variables

    private void cargarCbos() {
        cboClasificacion.removeAllItems();
        cboClasificacion2.removeAllItems();
        cboClasificacion3.removeAllItems();
        cboClasificacion.addItem("Asignar");
        cboClasificacion2.addItem("Asignar");
        cboClasificacion3.addItem("Asignar");
        
        for (String clasificacion : clasificaciones) {
            cboClasificacion.addItem(clasificacion);
            cboClasificacion2.addItem(clasificacion);
            cboClasificacion3.addItem(clasificacion);
        }
        cboUnidades.removeAllItems();
        cboUnidades2.removeAllItems();
        cboUnidades.addItem("Asignar");
        cboUnidades2.addItem("Asignar");
        
        for (String unidad : unidades) {
            cboUnidades.addItem(unidad);
            cboUnidades2.addItem(unidad);
        }
        
        cboInventarioFilter.removeAllItems();
        ArrayList<Object> list = load.listar("0", new Inventario());
        if(list.size() == 0){
            OptionPane.showMsg("No existe un inventario", "Debe crear un inventario para poder agregar productos.", 2);
            try{
                boton.index();
            }catch( SQLException | ClassNotFoundException ex){
                OptionPane.showMsg("Error inesperado", "Ocurri√≥ un error inesperado al intentar abrir ventana principal\n"
                        + "el sistema se cerrar√°.", 3);
                System.exit(0);
            }
        }
        for (Object object : list) {
            cboInventarioFilter.addItem(((Inventario)object).getNombre());
        }
        cboInventarioFilter.setSelectedItem(inventaryName);
        txtInventario1.setText(inventaryName);
    }
    
    private void load(){
        if(cboMostrar.getSelectedIndex()==0){//en nueva version cargar ventana completa con lista de clientes estatica global
            cargarDatos("0");
            btnStockDown.setVisible(true);
            btnStockUp.setVisible(true);
            btnReporte.setVisible(true);
        }else{
            cargarDatos("-1");
            btnStockDown.setVisible(false);
            btnStockUp.setVisible(false);
            btnReporte.setVisible(false);
        }
    }
    private void cargarDatos(String listar) {
        limpiarTextField();
        loadPanels(1);
        if(listar.equals("-1")){
            btnRestaurar.setVisible(true);
            btnEliminar.setVisible(false);
            btnAbrir.setVisible(false);
            btnUpdate.setVisible(false);
        }else{
            btnRestaurar.setVisible(false);
            btnEliminar.setVisible(true);
            btnAbrir.setVisible(true);
            btnUpdate.setVisible(true);
        }
        try{
            modelo.setNumRows(0);
            GlobalValuesVariables.setInventaryChooser(stInventario.getId());
            //asignamos el nombre del inventario ara el reporte
            GlobalValuesVariables.ITEMS_INVENTARIO = stInventario.getNombre();
            List<Object> lista = load.listar(listar, new Item());
            GlobalValuesVariables.setInventaryChooser(0);
            int index=0;
            for (Object object : lista) {
                Item temp = (Item)object;
                String precio = (temp.getTipo() == 0)?
                        GV.strToPrice(temp.getPrecioAct())+" (unidad)":
                        GV.strToPrice(temp.getPrecioAct())+" ("+unidades.get(temp.getTipo()-1)+")";
                GV.calcularReporteItems(index, temp);
                Object[] fila = new Object[4];
                fila[0] = temp.getCod();
                fila[1] = temp.getDescripcion();
                fila[2] = precio;
                fila[3] = temp.getStock();
                modelo.addRow(fila);
                index++;
            }
            tblListar.updateUI();
            if(tblListar.getRowCount() == 0){
                GV.showMsgOnEmptyTable(cboMostrar, txtBuscar, "Items");
            }
            
        }catch(Exception e){
            OptionPane.showMsg("Ocurri√≥ un error inesperado", "Ocurri√≥ un error inesperado al cargar valores en la tabla, ["+e.getMessage()+"]",3);
        }
    }

    private void abrirItem(String cod) throws SQLException, ClassNotFoundException, InstantiationException, IllegalAccessException {
        String invName = cboInventarioFilter.getSelectedItem().toString();
        stItem = load.getItem(cod,invName);
        loadPanels(2);
        if(stItem!=null){
            txtStock2.setText(""+stItem.getStock());
            if(stItem.getCod().isEmpty() || stItem.getCod().equals("null"))
                txtCod2.setText("");
            else
                txtCod2.setText(stItem.getCod());
            txtDesc2.setText(stItem.getDescripcion());
            Object proveedor = GV.searchInList(stItem.getIdProveedor(), proveedores, new Proveedor());
            String nombreProveedor = (proveedor != null)?(((Proveedor)proveedor).getNombre()+"<"+((Proveedor)proveedor).getCod()+">"):"";
            txtProveedor2.setText(nombreProveedor);
            cboUnidades2.setSelectedIndex(stItem.getTipo());
            cboClasificacion2.setSelectedIndex(stItem.getClasificacion());
            txtDesc2.setText(stItem.getDescripcion());

            txtPrecAct2.setValue((int)stItem.getPrecioAct());
            txtPrecRef2.setValue((int)stItem.getPrecioRef());
            Inventario inv = (Inventario)load.get("BY_ID/"+stItem.getInventario(), 0, new Inventario());
            txtInventario2.setText(invName);

            txtStock2.setText(""+stItem.getStock());
            txtStockMin2.setValue((int)stItem.getStockMin());
        }else{
            OptionPane.showMsg("Seleccione registro","Error al cargar valores,\n"
                + "es posible que no se haya seleccionado un registro\n"
                + "o el valor seleccionado no tiene un identificador v√°lido.",2);
        }
    }
    
    private void loadPnlStock(String cod) throws SQLException, ClassNotFoundException, InstantiationException, IllegalAccessException {
        String invName = cboInventarioFilter.getSelectedItem().toString();
        stItem = (Item)load.getItem(cod,invName);
            loadPanels(3);
            if(stItem!=null){
                if(stItem.getCod().isEmpty() || stItem.getCod().equals("null"))
                    txtCod3.setText("");
                else
                    txtCod3.setText(stItem.getCod());
                txtDesc3.setText(stItem.getDescripcion());
                cboClasificacion3.setSelectedIndex(stItem.getClasificacion());
                txtCausaReduccion.setText("");
                
                
                txtStockaReducir.setValue((int)1);
            }else{
                OptionPane.showMsg("Seleccione registro","Error al cargar valores,\n"
                    + "es posible que no se haya seleccionado un registro\n"
                    + "o el valor seleccionado no tiene un identificador v√°lido.",2);
            }
    }

    private void limpiarTextField() {
        txtCod1.setText("");
        txtCod2.setText("");
        txtProveedor.setText("");
        txtProveedor2.setText("");
        txtPrecAct1.setValue((int)0);
        txtPrecAct2.setValue((int)0);
        txtPrecRef1.setValue((int)0);
        txtPrecRef2.setValue((int)0);
        txtStock1.setValue((int)0);
        txtStock2.setText("");
        txtStockMin1.setValue((int)0);
        txtStockMin2.setValue((int)0);
        txtDesc1.setText("");
        txtDesc2.setText("");
        
        cargarCbos();
    }

    private void loadPanels(int param) {
        switch (param){
            case 1:
                pnl1.setVisible(true);
                pnl2.setVisible(false);
                pnl3.setVisible(false);
                break;
            case 2:
                pnl1.setVisible(false);
                pnl2.setVisible(true);
                pnl3.setVisible(false);
                break;
            case 3:
                pnl1.setVisible(false);
                pnl2.setVisible(false);
                pnl3.setVisible(true);
                break;
            default:
                pnl1.setVisible(true);
                pnl2.setVisible(false);
                break;
        }
    }
    
    private void cWT(){
        CursorUtils.cursorWAIT(this);
    }
    private void cDF(){
        CursorUtils.cursorDF(this);
    }
    
    private void updateItem(){
        try {
            Inventario inventario = (Inventario)load.get(txtInventario2.getText(), 0, new Inventario());
            int idInventario = (inventario!= null)?inventario.getId():0;
            cWT();
            stItem.setClasificacion(cboClasificacion2.getSelectedIndex());
            stItem.setTipo(cboUnidades2.getSelectedIndex());
            String rut = GV.getFilterString(GV.obtenerCodEntreLlaves(txtProveedor2.getText()));
            String idProveedor = "";
            if(GV.searchInList(rut, proveedores, new Proveedor())!=null){
                idProveedor = rut;
            }
            stItem.setIdProveedor(idProveedor);
            stItem.setDescripcion(txtDesc2.getText());
            stItem.setInventario(idInventario);
            try {
                txtPrecAct2.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VItems.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al precio actual.", 2);
                cDF();
                return;
            }
            try {
                txtPrecRef2.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VItems.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al precio de referencia.", 2);
                cDF();
                return;
            }
            try {
                txtStockMin2.commitEdit();
            } catch (ParseException ex) {
                Logger.getLogger(VItems.class.getName()).log(Level.SEVERE, null, ex);
                GV.mensajeExcepcion("Error en valor ingresado al stock minimo.", 2);
                cDF();
                return;
            }
            stItem.setPrecioAct((int)txtPrecAct2.getValue());
            stItem.setPrecioRef((int)txtPrecRef2.getValue());
            stItem.setStockMin((int)txtStockMin2.getValue());
            
            if(!load.updateFromUI(stItem)){
                cDF();
                return;
            }
            cargarDatos("0");
            cDF();
        } catch (SQLException | ClassNotFoundException | InstantiationException | IllegalAccessException ex) {
            OptionPane.showMsg("Error al cargar los datos para modificaci√≥n.", "Ocurri√≥ un error inesperado al momento de cargar los datos."
                    + "\nDetalle: "+ex, 3);
        }
        cDF();
    }
    
    private void increaseStock(){
        try{
            cWT();
            int fila = tblListar.getSelectedRow();
            String codigo = tblListar.getValueAt(fila, 0).toString();
            GlobalValuesVariables.setIdItemIncreaseStock(codigo);
            OptionPane.showOptionPanel(new OpanelIncreaseStock(), "Incrementar Stock");
            cDF();
        }catch(Exception e){
            OptionPane.showMsg("Seleccione un elemento en la tabla","Debe hacer clic sobre un elemento de la tabla,\n"
                    + "Luego presione el bot√≥n \"Incrementar Stock\".",  2);
            cDF();
        }
    }
    
    private void autocompletar() throws SQLException, ClassNotFoundException {
        TextAutoCompleter textAutoCompleter = new TextAutoCompleter(txtProveedor);
        TextAutoCompleter textAutoCompleter2 = new TextAutoCompleter(txtProveedor2);
        for (Object temp : proveedores) {
            textAutoCompleter.addItem(((Proveedor)temp).getNombre()+" <"+((Proveedor)temp).getCod()+">");
            textAutoCompleter.setMode(0);
            textAutoCompleter2.addItem(((Proveedor)temp).getNombre()+" <"+((Proveedor)temp).getCod()+">");
            textAutoCompleter2.setMode(0);
        }
    }
}
